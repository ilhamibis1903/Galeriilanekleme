<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAA//9k=
</value>
  </data>
</root>